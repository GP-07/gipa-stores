[{"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\App.jsx":"1","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\NavBar\\NavBar.jsx":"2","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\index.jsx":"3","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\CartWidget\\CartWidget.jsx":"4","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemListContainer\\ItemListContainer.jsx":"5","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemCount\\ItemCount.jsx":"6","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemCountContainer\\ItemCountContainer.jsx":"7","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemList\\ItemList.jsx":"8","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Item\\Item.jsx":"9","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemDetailContainer\\ItemDetailContainer.jsx":"10","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemDetail\\ItemDetail.jsx":"11","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\NavBarItem\\NavBarItem.jsx":"12","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\NotFound\\NotFound.jsx":"13","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Cart\\Cart.jsx":"14","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\store\\CartContext.js":"15","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\db\\index.js":"16","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Checkout\\Checkout.jsx":"17","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Checkout\\CheckoutDialog.jsx":"18"},{"size":1278,"mtime":1611272036970,"results":"19","hashOfConfig":"20"},{"size":2422,"mtime":1609124593178,"results":"21","hashOfConfig":"20"},{"size":197,"mtime":1607302018052,"results":"22","hashOfConfig":"20"},{"size":3002,"mtime":1611539638338,"results":"23","hashOfConfig":"20"},{"size":2328,"mtime":1610927912859,"results":"24","hashOfConfig":"20"},{"size":867,"mtime":1608498969121,"results":"25","hashOfConfig":"20"},{"size":461,"mtime":1610765921869,"results":"26","hashOfConfig":"20"},{"size":571,"mtime":1609100121118,"results":"27","hashOfConfig":"20"},{"size":1849,"mtime":1609886402350,"results":"28","hashOfConfig":"20"},{"size":3158,"mtime":1610927863430,"results":"29","hashOfConfig":"20"},{"size":772,"mtime":1610331565045,"results":"30","hashOfConfig":"20"},{"size":667,"mtime":1609098611296,"results":"31","hashOfConfig":"20"},{"size":148,"mtime":1609128324356,"results":"32","hashOfConfig":"20"},{"size":7462,"mtime":1611539603705,"results":"33","hashOfConfig":"20"},{"size":2521,"mtime":1611539806084,"results":"34","hashOfConfig":"20"},{"size":554,"mtime":1611008050499,"results":"35","hashOfConfig":"20"},{"size":3671,"mtime":1611539283173,"results":"36","hashOfConfig":"20"},{"size":2625,"mtime":1611431252682,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"18fkby7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\App.jsx",[],["83","84"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\NavBar\\NavBar.jsx",[],["85","86"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\index.jsx",[],["87","88"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\CartWidget\\CartWidget.jsx",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemListContainer\\ItemListContainer.jsx",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemCount\\ItemCount.jsx",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemCountContainer\\ItemCountContainer.jsx",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemList\\ItemList.jsx",[],["89","90"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Item\\Item.jsx",["91"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemDetailContainer\\ItemDetailContainer.jsx",["92","93","94"],"import { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ItemDetail from '../ItemDetail/ItemDetail';\r\nimport ItemCountContainer from '../ItemCountContainer/ItemCountContainer';\r\nimport './ItemDetailContainer.css';\r\nimport { CartContext } from '../../store/CartContext';\r\nimport { getFirestore } from '../../db';\r\n\r\nconst ItemDetailContainer = () => {\r\n    // UseParams : recibe el id del producto a mostrar por parametro\r\n    const { id } = useParams();\r\n\r\n    // UseState : se cargo en un estado local el item a mostrar y la cantidad que le va seteando el usuario\r\n    const [item, setItem] = useState({\r\n        data: null,\r\n        quantity: 0\r\n    });\r\n\r\n    // UseHistory : para permitir la redirección al carrito cuando el usuario presione comprar\r\n    const history = useHistory();\r\n\r\n    // UseContext : luego de que presione comprar también debera ir completandose el carrito\r\n    const [data, isInCart, addItem, addToExisting, removeItem, clear] = useContext(CartContext);\r\n\r\n    // Configuración de la db para hacer las llamadas necesarias\r\n    const db = getFirestore();\r\n\r\n    const getItem = (id) => {\r\n        db.collection(\"products\").doc(id).get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    setItem({\r\n                        data: doc.data(),\r\n                        quantity: 0\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => console.error(\"Debe seleccionar un producto! Detalle: \", error));\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(`Selected product ${id}`);\r\n        getItem(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id]);\r\n\r\n    const calculateCurrentStock = () => {\r\n        const existingItemInCart = isInCart(item.data.id);\r\n        if (!!existingItemInCart) {\r\n            return item.data.stock - existingItemInCart.quantity;\r\n        }\r\n        return item.data.stock;\r\n    }\r\n\r\n    const modifyItemQuantity = (newQuantity) => {\r\n        setItem({\r\n            data: item.data,\r\n            quantity: newQuantity\r\n        });\r\n    }\r\n\r\n    const handleClickAddToCart = () => {\r\n        if (!!isInCart(item.data.id)) {\r\n            addToExisting(item);\r\n        } else {\r\n            addItem(item);\r\n        }\r\n        history.push(\"/cart\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                item.data ?\r\n                <section className=\"itemContainer\">\r\n                    <ItemDetail item={item.data} />\r\n                    <ItemCountContainer stock={calculateCurrentStock()} itemQuantity={item.quantity} modifyItemQuantity={modifyItemQuantity} />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClickAddToCart}>\r\n                        Agregar a carrito\r\n                    </Button>\r\n                    <div className=\"relatedProducts\">Productos recomendados</div>\r\n                </section> : \r\n                <p>Cargando producto...</p>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemDetailContainer;",["95","96"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\ItemDetail\\ItemDetail.jsx",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\NavBarItem\\NavBarItem.jsx",[],["97","98"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\NotFound\\NotFound.jsx",[],["99","100"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Cart\\Cart.jsx",["101","102"],"import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CartContext } from '../../store/CartContext';\r\nimport ItemCountContainer from '../ItemCountContainer/ItemCountContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        // maxWidth: 500,\r\n    },\r\n    image: {\r\n        width: 128,\r\n        height: 128,\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    totalQuantity: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    totalAmount: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    actions: {\r\n        position: \"absolute\",\r\n        right: `2rem`,\r\n    },\r\n    noLinkStyle: {\r\n        textDecoration: `none`,\r\n    }\r\n}));\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles();\r\n\r\n    // UseContext : carga la data del carrito desde el contexto y también permite modificarla\r\n    const {data, isInCart, addItem, addToExisting, removeItem, clear} = useContext(CartContext);\r\n\r\n    const getSubtotalPerItem = (item) => {\r\n        return item.data.price * item.quantity;\r\n    }\r\n\r\n    const getTotal = () => {\r\n        let total = 0;\r\n        data.items.forEach(item =>\r\n            total = total + getSubtotalPerItem(item)\r\n        );\r\n        return total;\r\n    }\r\n\r\n    const modifyItemQuantity = (item, newQuantity) => {\r\n        let itemModified = {\r\n            data: item.data,\r\n            quantity: newQuantity\r\n        };\r\n        newQuantity > item.quantity ? addItem(itemModified) : removeItem(itemModified);\r\n    }\r\n\r\n    const removeWholeItem = (item) => {\r\n         modifyItemQuantity(item, 0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            data.totalQuantity > 0 ? \r\n            <>\r\n                <div className={classes.root}>\r\n                    <Paper className={classes.paper}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => clear()}>\r\n                                    Vaciar carrito\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link to=\"/checkout\" className={classes.noLinkStyle}>\r\n                                    <Button className={classes.actions} variant=\"contained\" color=\"primary\">\r\n                                        Finalizar compra\r\n                                    </Button>\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </div>\r\n                {\r\n                    data.items.map(item => {\r\n                        return (\r\n                            <div key={item.data.id} className={classes.root}>\r\n                                <Paper className={classes.paper}>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item>\r\n                                            <ButtonBase className={classes.image}>\r\n                                                <img className={classes.img} alt=\"complex\" src={item.data.image} />\r\n                                            </ButtonBase>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm container>\r\n                                            <Grid item xs container direction=\"column\" spacing={2}>\r\n                                            <Grid item xs>\r\n                                                <Typography gutterBottom variant=\"subtitle1\">\r\n                                                {item.data.title}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" gutterBottom>\r\n                                                {item.data.description}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {`Cantidad de este producto: ${item.quantity}`}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {`Precio unitario: ${item.data.price}`}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item container spacing={2}>\r\n                                                <ItemCountContainer stock={item.data.stock} itemQuantity={item.quantity} \r\n                                                modifyItemQuantity={(newQuantity) => {\r\n                                                    modifyItemQuantity(item, newQuantity)\r\n                                                }} />\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                                    removeWholeItem(item)\r\n                                                }}>\r\n                                                    Eliminar producto del carrito\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\">{`Subtotal: $${getSubtotalPerItem(item)}`}</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className={classes.root}>\r\n                    <Paper className={classes.paper}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <p className={classes.totalQuantity}>{`Cantidad total de productos: ${data.totalQuantity}`}</p>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <p className={classes.totalAmount}>{`Precio total: $${getTotal()}`}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </div>\r\n            </> :\r\n            <div>\r\n                <h3>No hay productos en el carrito</h3>\r\n                <Link to=\"/\" className={classes.noLinkStyle}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Ir a comprar!\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\store\\CartContext.js",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\db\\index.js",[],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Checkout\\Checkout.jsx",["103","104","105","106","107","108","109","110"],"C:\\Users\\A309428\\Documents\\Coderhouse\\ReactJS\\gipa-stores\\src\\components\\Checkout\\CheckoutDialog.jsx",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"112","replacedBy":"118"},{"ruleId":"114","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":26},{"ruleId":"122","severity":1,"message":"126","line":24,"column":12,"nodeType":"124","messageId":"125","endLine":24,"endColumn":16},{"ruleId":"122","severity":1,"message":"127","line":24,"column":52,"nodeType":"124","messageId":"125","endLine":24,"endColumn":62},{"ruleId":"122","severity":1,"message":"128","line":24,"column":64,"nodeType":"124","messageId":"125","endLine":24,"endColumn":69},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","replacedBy":"130"},{"ruleId":"112","replacedBy":"131"},{"ruleId":"114","replacedBy":"132"},{"ruleId":"112","replacedBy":"133"},{"ruleId":"114","replacedBy":"134"},{"ruleId":"122","severity":1,"message":"135","line":50,"column":18,"nodeType":"124","messageId":"125","endLine":50,"endColumn":26},{"ruleId":"122","severity":1,"message":"136","line":50,"column":37,"nodeType":"124","messageId":"125","endLine":50,"endColumn":50},{"ruleId":"122","severity":1,"message":"137","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":22},{"ruleId":"122","severity":1,"message":"135","line":10,"column":18,"nodeType":"124","messageId":"125","endLine":10,"endColumn":26},{"ruleId":"122","severity":1,"message":"138","line":10,"column":28,"nodeType":"124","messageId":"125","endLine":10,"endColumn":35},{"ruleId":"122","severity":1,"message":"136","line":10,"column":37,"nodeType":"124","messageId":"125","endLine":10,"endColumn":50},{"ruleId":"122","severity":1,"message":"127","line":10,"column":52,"nodeType":"124","messageId":"125","endLine":10,"endColumn":62},{"ruleId":"122","severity":1,"message":"139","line":19,"column":12,"nodeType":"124","messageId":"125","endLine":19,"endColumn":16},{"ruleId":"122","severity":1,"message":"140","line":20,"column":11,"nodeType":"124","messageId":"125","endLine":20,"endColumn":18},{"ruleId":"122","severity":1,"message":"141","line":51,"column":11,"nodeType":"124","messageId":"125","endLine":51,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":62,"column":6,"nodeType":"144","endLine":62,"endColumn":8,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],["146"],["147"],["146"],["147"],"no-unused-vars","'ItemCountContainer' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'removeItem' is assigned a value but never used.","'clear' is assigned a value but never used.",["146"],["147"],["146"],["147"],["146"],["147"],"'isInCart' is assigned a value but never used.","'addToExisting' is assigned a value but never used.","'CheckoutDialog' is defined but never used.","'addItem' is assigned a value but never used.","'open' is assigned a value but never used.","'history' is assigned a value but never used.","'handleClose' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'backTo' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [backTo, history]",{"range":"151","text":"152"},[1799,1801],"[backTo, history]"]